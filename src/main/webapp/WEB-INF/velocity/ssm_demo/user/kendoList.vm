<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

    <link href="$!{rc.contextPath}/static/styles/kendo.common.min.css" rel="stylesheet" />
    <link href="$!{rc.contextPath}/static/styles/kendo.rtl.min.css" rel="stylesheet" />
    <link href="$!{rc.contextPath}/static/styles/kendo.default.min.css" rel="stylesheet" />
    <link href="$!{rc.contextPath}/static/styles/kendo.dataviz.min.css" rel="stylesheet" />
    <link href="$!{rc.contextPath}/static/styles/kendo.dataviz.default.min.css" rel="stylesheet" />
    <link href="$!{rc.contextPath}/static/styles/kendo.silver.min.css" rel="stylesheet" />

    <script src="$!{rc.contextPath}/static/js/jquery.min.js"></script>
    <script src="$!{rc.contextPath}/static/js/kendo.all.min.js"></script>
    <script src="$!{rc.contextPath}/static/js/kendo.web.min.js"></script>
    <script src="$!{rc.contextPath}/static/js/kendo.grid.min.js"></script>
    <script src="$!{rc.contextPath}/static/js/messages/kendo.messages.zh-CN.min.js"></script>
    <script src="$!{rc.contextPath}/static/js/kendo.editor.min.js"></script>
    <script src="$!{rc.contextPath}/static/js/jszip.min.js"></script>

</head>

##修饰弹出的详情页面
<style type="text/css">
    #details-container
    {
        padding: 10px;
    }

    #details-container h2
    {
        margin: 0;
    }

    #details-container em
    {
        color: #8c8c8c;
    }

    #details-container dt
    {
        margin:0;
        display: inline;
    }

</style>

##弹出的详情页模版
<script type="text/x-kendo-template" id="template">
    <div id="details-container">
        <div align="center"><img src='http://127.0.0.1:80/img/#= photo #'></div>
        <h2>#= name #</h2>     ##用 "#= name #" 和 "#: name #" 都能取值,放在里面的会被解析
        <dl>
            <dt>年龄: #= age #</dt><br>
            <dt>住址: #= address #</dt><br>
            <dt>创建时间: #= s_createTime# </dt>　　　##日期转换
        </dl>
    </div>
</script>

<script>

    var detailWindow;    //详情窗口
    var detailTemplate;   //详情窗口的模版
    var editUser_window;   //编辑用户的窗口
    var role_window;     //分配角色的窗口

    $(function() {

        //初始化页面
        initPage();


        //------------------查询按钮--------------------
        $("#search").click(function() {
            queryData();
        });

        //------------------清空查询条件--------------------
        $("#clear").bind("click",function() {
            $("#name").val("");
            $("#age").val("");
            $("#address").val("");
            queryData();
        });

        //----------------弹出详情页-----------------
        detailWindow = $("#detail").kendoWindow({
                            title: "用户详情",
                            modal: true,
                            visible: false,
                            resizable: false,
                            width: 300
                        }).data("kendoWindow");

        detailTemplate = kendo.template($("#template").html());

        $("#exportExcel").click(function() {
            var grid = $("#grid").data("kendoGrid");
            grid.saveAsExcel();
        });

        //主页面的文件上传,可同时选多个文件,这时会发送多次请求,且只有符合要求的会被上传
        $("#uploadFile").kendoUpload({
            async: {
                saveUrl: "$!{rc.contextPath}/kendo/upload.do",
                autoUpload : true
            },
            localization: {     //设置上传按钮名称
                select: "上传图片",
                dropFilesHere: "拖拽文件到此区域"
            },
            showFileList : false,    //不展示上传的文件列表
            multiple:true, // 支持多个文件上传
            upload : function(e) {
                // 获取上传的文件
                var files = e.files;
                //验证文件格式
                $.each(files, function () {
                    if (!/\.(gif|jpg|jpeg|png|GIF|JPG|PNG)$/.test(this.extension.toLowerCase())) {
                        alert("只能上传图片文件!")
                        e.preventDefault();
                    }
                });
            },
            success:function(e) {
                if(e.response) {
                    alert("上传成功!");
                }else {
                    alert("上传失败!");
                }
            }
        });



    });//-------------jQuery启动函数结束------------



    //----------------------页面初始化的方法----------------------------
    function initPage() {
        var dataSource = new kendo.data.DataSource({
            transport: {
                read: {
                    url:"$!{rc.contextPath}/kendo/list.do",  //列表
                    dataType: 'json',
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8'
                },
                destroy: {
                    url: "$!{rc.contextPath}/kendo/delete.do",//删除
                    dataType: "json",
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',
                    complete:function() {
                        queryData();     //每次删除后都重新更新列表
                    }
                },
                update: {
                    url: "$!{rc.contextPath}/kendo/edit.do",//修改
                    dataType: "json",
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',
                    complete:function() {
                        queryData();
                    }
                },
                create: {
                    url: "$!{rc.contextPath}/kendo/add.do",//添加
                    dataType: "json",
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',
                    complete:function() {
                        queryData();
                    }
                },
                parameterMap : function(data, operation) {
                    if (operation == "read") {   // 给后台传分页的条件
                        var parameter = {
                            page : data.page,    //当前页
                            pageSize : data.pageSize, //每页显示个数
                            c_name : $("#name").val(),
                            c_age : $("#age").val(),
                            c_address : $("#address").val()
                        };
                        return kendo.stringify(parameter);   //传到后台的是json格式的数据,接收的参数需要加注接 @RequestBody
                    }else {
                        //进行其他操作之前,先刷新grid中的数据(不加这个会导致新增或者修改的窗口无法关闭,而且数据不会更新))
                        freshGrid();
                        // options.models 是一个数组,直接传到后台会发生转换错误!!所以取第一个元素
                        return kendo.stringify(data.models[0]);    //返回这一行的数据,json格式(创建,修改,删除)
                    }
                }
            },
            batch : true,    //这里必须是true,否则无法发出请求
            pageSize : 5, //默认每页显示个数
            schema : {
                total: "totalCount",   //可以直接这样取值
                model: {
                    id: "id",   //主键
                    fields: {       // 这里写的是随表单一起提交的数据
                        id: { editable: false, nullable: true }, //editable: false(是否需要编辑) nullable : true,(是否允许为空)
                        //validation是验证,也就是在新建或者修改的时候,不能为空
                        name: { validation: { required: true } },
                        age: { validation: { required: true } },
                        address: { validation: { required: true } },
                        photo: {
                            validation: {required: true},
                            //defaultValue: "ccc"   //这个可以设置默认值
                        },
                        s_createTime:{editable: false }  //创建时间不可编辑
                    }
                },
                data : function(data) {
                    return data.userList;  //响应到页面的数据,key值是vo类定义好的
                }
            },
            serverPaging : true,     //这三个是Grid的分页支持
            serverFiltering : true,
            serverSorting : true
        });

        $("#grid").kendoGrid({
            //scrollable: {virtual : true },    //滚动条!一定不能加!!否则有莫名其妙的错误!!比如在第二页点编辑会跳到第一页
            dataSource : dataSource,
            height : "",    //自动设置高度
            pageable: {
                refresh: true,  // 是否允许刷新页面
                buttonCount: 5,  // 限制页数按钮的显示个数
                pageSizes: [5, 10, 20, 50],
                previousNext : true,// 是否允许有上一页、下一页、首页、尾页摁扭
                numeric : true,// 是否显示翻页处的页数按钮
                input : true,// 是否显示输入页数的文本框
                messages : {
                    display : "显示  {0}-{1} 条数据 总共 {2} 条数据",
                    empty : "没有数据",
                    itemsPerPage : "选择显示行数",
                    refresh : "刷新",
                    previous : "上一页",
                    next : "下一页",
                    last : "尾页",
                    first : "首页"
                }
            },
            selectable: "multiple",  // 是否可多选
            editable: true,        //表格是否可编辑
            navigatable: true,   //选中对应的单元格会有样式
            selectable: "multiple cell",  //可选中单元格,去掉就是选中一整行
            ## 只有中高级权限的用户才能有添加用户的权限
            #if($permission.contains("HIGH_PERMISSION") or $permission.contains("MIDDLE_PERMISSION"))
                toolbar : [      //添加一个新增按钮
                    {
                        name : "create",
                        text : "新增用户"
                    }
                ],
            #end
            columns : [    //这里写的是具体在表格中显示的数据,不是随表单提交的数据
                {
                    field : "name",      //这个field是实体类的成员变量名
                    title : "<h3 align='center'>姓名</h3>",
                    width: 200,
                    template:function (data) {    //可写可不写,不写就会默认显示,一般用于判断多种值
                        return "<span>"+data.name+"</span>"
                    },
                    attributes : {      //设置样式
                        style : "text-align: center; font-size: 20px; color:blue;"
                    }
                }, {
                    field : "age",
                    title : "<h3 align='center'>年龄</h3>",
                    width: 200,
                    attributes : {      //设置样式
                        style : "text-align: center; font-size: 20px"
                    }
                }, {
                    field : "address",
                    title : "<h3 align='center'>住址</h3>",
                    width: 200,
                    attributes : {      //设置样式
                        style : "text-align: center; font-size: 20px"
                    },
                    editor : addressDropDownEditor   //下拉列表
                },  {
                    field: "photo",
                    title : "<h3 align='center'>头像</h3>",                     //这里的模版是在页面进行显示的数据
                    width: 150,
                    template: "<img src='http://127.0.0.1:80/img/#:data.photo#'>",    //nginx代理的地址, #:data.photo#  用于取值
                    attributes : {      //设置样式
                        style : "text-align: center;"
                    },
                    editor : uploadImgEditor
                },{
                    field: "s_createTime",
                    title : "<h3 align='center'>创建时间</h3>",
                    width: 300,
                    //format: "{0:yyyy-MM-dd}",    //不起作用?
                    attributes : {      //设置样式
                        style : "text-align: center;"
                    }
                },{
                    command : [
                        {
                            text : "详情",
                            click : showDetail
                        },
                        ## 只有中高级的权限才能做以下的操作
                        #if($permission.contains("HIGH_PERMISSION") or $permission.contains("MIDDLE_PERMISSION"))
                            {
                                name : "edit",
                                text : {
                                    edit: "编辑",
                                    cancel: "取消",
                                    update: "确认"
                                }
                            },
                            {
                                name : "destroy",
                                text : "删除"
                            },
                            {
                                text : "分配角色",
                                click : assignRole
                            }
                        #end
                    ],
                    title : "<h3 align='center'>操作</h3>",
                    attributes: {      //设置样式
                        style: "text-align: center; font-size: 14px"
                    }
                } ],
            editable : {// 设置可以在列表中进行编辑数据
                // 设置删除时显示的确认信息
                confirmation : "您确定要进行删除操作吗？",
                //createAt : "top", // 添加位置，默认是top：从第一行进行添加
                destroy : true,     // 是否允许删除
                mode : "popup"      // 设置编辑形式为弹出框(popup)还是在列表中(inline)
            },
            excelExport: function(e) {
                e.workbook.fileName = "用户列表.xlsx";    //定义导出文件的文件名
            },
            excel:{
                allPages:false    //是否导出所有页中的数据,默认是false,也就是导出当前页的数据
            }
            //groupable : true,   //是否添加排序功能
            //sortable: true  //是否添加分组功能
        });

    }//------------------------初始化页面方法结束----------------------------


    // 会把查询条件一起发给后台
    function queryData() {
        var grid = $("#grid").data("kendoGrid");   //*********快速刷新页面
        grid.dataSource.read();
    }

    // Grid刷新
    function freshGrid() {
        var grid = $("#grid").data("kendoGrid");
        grid.refresh();
    }

    //清空数据源,分页的缓存数据全部清空
    function clearData() {
        $("#grid").data("kendoGrid").dataSource.data([]);
    }

    //编辑或新增时的下拉列表
    function addressDropDownEditor(container, options) {
        $('<input data-text-field="address" data-value-field="address" name="address" required="required" data-bind="value:' + options.field + '"/>')   // 绑定显示的数据
                .appendTo(container).kendoDropDownList({
            dataTextField: "address",    //显示的数据的key(一般是中文)
            dataValueField: "address",   //提交的数据的key(一般是id)
            dataSource: {       //配置列表显示的数据源
                transport: {
                    read: {
                        url:"$!{rc.contextPath}/kendo/address.do",  //列表
                        dataType: 'json',
                        type: 'POST',
                        contentType: 'application/json; charset=utf-8'
                    }
                }
            }
        });
    }

    function showDetail(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        detailWindow.content(detailTemplate(dataItem));
        detailWindow.center().open();
    }


    //--------------新增,编辑的文件上传--------------------START------------------------------------------------------------
    //字段修改格式化,修改框转换为上传按钮
    function uploadImgEditor(container, options) {
        //设置一个隐藏域来存储上传的文件名,data-bind="value:photo"可以绑定数据,如果有数据返回就会显示,没有就不会显示
        //如果是新增操作,就不会显示数据;如果是修改操作,就会显示绑定的数据
        // 问题 : 必须要将值手工改动才会被提交 , 用程序将值改动是不能被提交的  ??????????????????
        $('<input id="photo" name="photo" required="required" type="text" data-bind="value:photo">').appendTo(container);
        //用于显示上传的图片
        $('<img id="myImg">').appendTo(container);
        //设置上传文件的具体属性
        $('<input type="file" name="file"/>').appendTo(container).kendoUpload({
            async: {    //异步上传图片到指定地址中
                saveUrl: "$!{rc.contextPath}/kendo/upload.do",
                autoUpload: true   //如果是false则需要手动点击上传图片
            },
            localization: {     //设置上传按钮名称
                select: "上传头像"
            },
            validation: {
                allowedExtensions: [".gif", ".jpg", ".png", ".bmp"],      //验证格式
                maxFileSize: 4194304
            },
            showFileList : false,    //不展示上传的文件列表
            //complete: uploadPhotoComplete,  //响应后,这个函数一定会执行
            success: uploadPhotoSuccess
        });

    }

    //不手动改动内容,就不会随着表单一起提交??而且提交的上一次的数据
    function uploadPhotoSuccess(e) {
        if(e.response.success) {
            var data = e.response;
            var filename = data.filename;
            $("#photo").val(filename);
            var path = "http://127.0.0.1:80/img/" + filename;
            $("#myImg").attr('src',path);         //上传图片后让图片显示
        }else {
            alert("上传失败");
        }
    }

    //--------------新增的编辑的文件上传-------------------END--------------------------------------------------------------


    //------------------------------分配角色  start---------------------------------------------
    function assignRole(e) {
        //获取当前的数据
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var id = dataItem.id;
        role_window = $("#roleDiv").kendoWindow({
            actions: ["Refresh", "Maximize", "Minimize", "Close"],
            title: "分配角色",
            width: 1200,
            height: 500,
            content: "$!{rc.contextPath}/role/toAssignRole.do?id="+id,
            modal: true,
            resizable:true,    //设置窗口尺寸是否可调节
            draggable:true,     //设置窗口是否可拖拽
            //open: onOpen,      //打开窗口做的操作
            //close: onClose,      //关闭窗口的操作
            //refresh:onRefresh,    //刷新窗口的操作
        }).data("kendoWindow");


        role_window.center();
        role_window.open();
    }

//    function onOpen() {
//        alert("onOpen");
//    }
//    function onClose() {
//        alert("onClose");
//    }
//    function onRefresh() {
//        alert("onRefresh");
//    }

    //-------------------------------分配角色  end--------------------------------------------



</script>

<body>


    <div style="padding: 20px" align="center">
        姓名:<input type="text" id="name">&nbsp;&nbsp;
        年龄:<input type="text" id="age">&nbsp;&nbsp;
        住址:<input type="text" id="address">&nbsp;&nbsp;
        <input type="button" id="search" value="查询">
        <input type="button" id="clear" value="清空">
        <input type="button" id="exportExcel" value="导出">
    </div>

#if($permission.contains("HIGH_PERMISSION") or $permission.contains("MIDDLE_PERMISSION"))
    ##上传图片的按钮,自动上传,不用提交表单
    <input type="file" name="file" id="uploadFile">
#end

    <div id="grid"></div>

    ##弹框需要定义一个div,详情的div
    <div id="detail" style="display: none;"></div>

    ## 分配角色
    <div id="roleDiv" style="display: none;"></div>


</body>

</html>